// <auto-generated />
using System;
using Ipr.WaterSensor.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ipr.WaterSensor.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ipr.WaterSensor.Core.Entities.TankStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalWaterCollected")
                        .HasColumnType("int");

                    b.Property<int>("TotalWaterDispensed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TankStatistics");
                });

            modelBuilder.Entity("Ipr.WaterSensor.Core.Entities.WaterLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeMeasured")
                        .HasColumnType("datetime2");

                    b.Property<int>("WaterLevelInMeters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaterLevels");
                });

            modelBuilder.Entity("Ipr.WaterSensor.Core.Entities.WaterTank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CubicMeters")
                        .HasColumnType("int");

                    b.Property<Guid?>("CurrentWaterLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Liters")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentWaterLevelId");

                    b.HasIndex("StatisticsId");

                    b.ToTable("WaterTanks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62dc7ae0-c7f7-4640-886a-b144fe102e3f"),
                            CubicMeters = 8,
                            Height = 4,
                            Liters = 10000,
                            Name = "Main water tank",
                            Width = 2
                        },
                        new
                        {
                            Id = new Guid("ae7058dc-a979-4de1-b97a-cfb20190dce9"),
                            CubicMeters = 8,
                            Height = 4,
                            Liters = 10000,
                            Name = "Secondary water tank",
                            Width = 2
                        });
                });

            modelBuilder.Entity("Ipr.WaterSensor.Core.Entities.WaterTank", b =>
                {
                    b.HasOne("Ipr.WaterSensor.Core.Entities.WaterLevel", "CurrentWaterLevel")
                        .WithMany()
                        .HasForeignKey("CurrentWaterLevelId");

                    b.HasOne("Ipr.WaterSensor.Core.Entities.TankStatistics", "Statistics")
                        .WithMany()
                        .HasForeignKey("StatisticsId");

                    b.Navigation("CurrentWaterLevel");

                    b.Navigation("Statistics");
                });
#pragma warning restore 612, 618
        }
    }
}
