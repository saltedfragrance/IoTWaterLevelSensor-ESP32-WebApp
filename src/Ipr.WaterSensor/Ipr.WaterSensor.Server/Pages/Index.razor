@page "/"
@layout TopMenuLayout

<PageTitle>Niveau</PageTitle>

@if (Tank != null)
{
    @if (FireBeetleDevice != null)
    {
        <BatteryIndicator BatteryPercentage="@FireBeetleDevice.BatteryPercentage"></BatteryIndicator>
    }
    <MudStack Row="false">

        <MudPaper Class="pa-5 mt-3 d-flex justify-content-center" Elevation="2">
            <MudStack Row="false" Class="align-items-center">
                <MudText Typo="Typo.h6" Align="Align.Center">@Tank.Name</MudText>
                <MudText Typo="Typo.h3" Align="Align.Center">@Tank.CurrentWaterLevel.Percentage %</MudText>
                <div class="waterTank" style="--waterLevel:@GetWaterLevelPixels(Tank.CurrentWaterLevel.Percentage)">

                </div>
            </MudStack>
        </MudPaper>

    </MudStack>
    //laatst gemeten
    //mqqt: connected
    //wifi: connected
}


@code{
    protected override async Task OnInitializedAsync()
    {
        if (!MQTTService.ClientStarted)
        {
            await MQTTService.StartClient();
            MQTTService.MqttClient.ApplicationMessageReceivedAsync += e =>
            {
                double measurement = double.Parse(Encoding.Default.GetString(e.ApplicationMessage.Payload));
                if (e.ApplicationMessage.Topic == MQTTService.topicMainTank)
                {
                    UpdateWaterTankLevel(measurement);
                }

                if (e.ApplicationMessage.Topic == MQTTService.topicBatteryLevel)
                {
                    UpdateBatteryLevel(measurement);
                }

                return Task.CompletedTask;
            };
        }
        await GetData();
    }
}